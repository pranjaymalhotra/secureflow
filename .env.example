# SecureFlow Configuration

# Database
DATABASE_URL=sqlite:///./secureflow.db
# For PostgreSQL: DATABASE_URL=postgresql://user:password@localhost/secureflow

# JWT Authentication
SECRET_KEY=your-secret-key-change-this-in-production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# LLM API Keys
GEMINI_API_KEY=your-gemini-api-key-here
OPENAI_API_KEY=your-openai-api-key-here

# Ollama Configuration
OLLAMA_BASE_URL=http://192.168.68.28:11434
OLLAMA_TIMEOUT=300

# File Upload Limits
MAX_UPLOAD_SIZE=1073741824
MAX_FILES=10000
SUPPORTED_EXTENSIONS=.py,.js,.ts,.java,.cpp,.c,.cs,.php,.rb,.go,.rs,.kt,.swift,.scala

# Worker Configuration
MAX_CONCURRENT_WORKERS=4
WORKER_TIMEOUT=1800
DEFAULT_SHARD_SIZE=50 

# Progress Reporting
PROGRESS_UPDATE_INTERVAL=30
WEBSOCKET_PING_INTERVAL=15

# Security
CORS_ORIGINS=["http://localhost:5173", "http://127.0.0.1:5173"]

# Logging
LOG_LEVEL=DEBUG
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# Report Generation
REPORTS_DIR=./reports
TEMP_DIR=./temp
KEEP_TEMP_FILES=false

# Development
DEBUG=true
RELOAD=true

# Add these port configurations
BACKEND_HOST=localhost
FRONTEND_URL=http://localhost:5173
FRONTEND_PORT=5173
BACKEND_PORT=8000
OLLAMA_PORT=11434
WEBSOCKET_PORT=8000

# Development CORS settings
CORS_ORIGINS=["http://localhost:5173", "http://127.0.0.1:5173"]

# WebSocket Configuration  
WEBSOCKET_ENABLED=true


# If using Docker, make sure these ports are exposed:
# Backend: 8000
# Frontend: 5173
# WebSocket will use the same port as backend (8000)